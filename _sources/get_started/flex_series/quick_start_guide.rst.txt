Quick Start Guide for Media Analytics on Intel® Data Center GPU Flex Series
---------------------------------------------------------------------------

These steps provide instructions on how to download and launch media
analytics container and run an object detection pipeline using
Intel® Deep Learning Streamer (Intel® DL Streamer) on an Intel® Data Center GPU Flex Series.

=================== ================================================
Optimized for       Description
=================== ================================================
OS                  Ubuntu\* 22.04
What You Will Learn How to launch a basic object detection pipeline.
Time to Complete    10 minutes
=================== ================================================

Purpose
~~~~~~~

.. image:: preview.gif
   :height: 281px
   :align: center

This quick start guide uses the ``gst-launch-1.0`` utility to launch a
simple media analytics pipeline performing:

-  media decode
-  inference using MobileNetV2 + SSD-based network for
   person/vehicle/bike detection
-  overlay of detected objects.

.. mermaid::

   stateDiagram
       direction LR 
       state Object-Detection {
       direction LR
       state media {
       direction LR
       h264
       }

       state video_source {
       direction LR
           demux --> parse 
       }
      
       state detect {
       direction LR
       state scale {
       direction LR
         w512xh512
       }
       state csc {
       direction LR
       BGR
       }

       state inference {
       direction LR
       person_vehicle_bike_detection_crossroad_1016
       }

       state tensors_to_objects {
       direction LR
       labels_person_vehicle_bike
       }

           scale --> csc
           csc --> inference
           inference --> tensors_to_objects
       }
       
       state metadata_overlay {
        direction LR
        bounding_boxes_and_labels
       }
       
       state display_or_encode {
        direction LR
        ximage_or_h264
       }
       
       
       media --> video_source
       video_source --> decode
       decode --> detect
       detect --> objects
       objects --> metadata_overlay
       metadata_overlay --> display_or_encode
   } 

Key Implementation Details
--------------------------

================= ==================================
Configuration     Default Setting
================= ==================================
Target device     Intel® Data Center GPU Flex Series
Input format      mp4
Output format     XDisplay or mp4
Output resolution same as input
================= ==================================

Perform the following steps on a Linux Ubunutu 22.04 System
-----------------------------------------------------------

Step 1: Allow connection to X server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   xhost local:root
   setfacl -m user:1000:r ~/.Xauthority

Step 2: Launch Intel® DL Streamer Container
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   DEVICE=${DEVICE:-/dev/dri/renderD128}
   DEVICE_GRP=$(ls -g $DEVICE | awk '{print $3}' | \
     xargs getent group | awk -F: '{print $3}')
   docker run -it --rm --net=host -e no_proxy=$no_proxy -e https_proxy=$https_proxy -e socks_proxy=$socks_proxy -e http_proxy=$http_proxy \
   -v ~/.Xauthority:/home/dlstreamer/.Xauthority -v /tmp/.X11-unix -e DISPLAY=$DISPLAY \
   --device $DEVICE --group-add $DEVICE_GRP \
   intel/dlstreamer:dgpu-dpcpp-devel /bin/bash

Step 3: Download Sample Media
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   wget "https://www.pexels.com/video/1721294/download/?w=640&h=360" -O pexels_1721294.mp4

Step 4: Download Object Detection Model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   omz_downloader --name person-vehicle-bike-detection-crossroad-1016

Step 5(a): Run Object Detection Pipeline and Display Results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   gst-launch-1.0 filesrc location=pexels_1721294.mp4 ! decodebin ! video/x-raw\(memory:VASurface\) ! \
                  gvadetect model=./intel/person-vehicle-bike-detection-crossroad-1016/FP16-INT8/person-vehicle-bike-detection-crossroad-1016.xml \
                            model-proc=/opt/intel/dlstreamer/samples/gstreamer/model_proc/intel/person-vehicle-bike-detection-crossroad-1016.json \
                            pre-process-backend=vaapi-surface-sharing \
                            pre-process-config=VAAPI_FAST_SCALE_LOAD_FACTOR=1 device=GPU ! \
                  vaapipostproc ! opencv_meta_overlay attach-label-mask=true ! sycl_meta_overlay ! vaapipostproc ! \
                  videoconvert ! ximagesink

Step 5(b): Run Object Detection Pipeline and Save Results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

   gst-launch-1.0 filesrc location=pexels_1721294.mp4 ! decodebin ! video/x-raw\(memory:VASurface\) ! \
                  gvadetect model=./intel/person-vehicle-bike-detection-crossroad-1016/FP16-INT8/person-vehicle-bike-detection-crossroad-1016.xml \
                            model-proc=/opt/intel/dlstreamer/samples/gstreamer/model_proc/intel/person-vehicle-bike-detection-crossroad-1016.json \
                            pre-process-backend=vaapi-surface-sharing \
                            pre-process-config=VAAPI_FAST_SCALE_LOAD_FACTOR=1 device=GPU ! \
                  vaapipostproc ! opencv_meta_overlay attach-label-mask=true ! sycl_meta_overlay ! vaapipostproc ! \
                  gvametaconvert json-indent=4 ! gvametapublish file-path=detection_results.json ! \
                  vaapih264enc ! h264parse ! mp4mux ! filesink location=detection_output.mp4

-----

.. include:: ../../include/disclaimer_footer.rst

